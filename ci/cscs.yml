include:
  - remote: 'https://gitlab.com/cscs-ci/recipes/-/raw/master/templates/v2/.ci-ext.yml'

variables:
  DEPLOY_TAG: 'latest'

stages:
  - build
  - test
  - deploy

.matrix-conf: &matrix-conf
  parallel:
    matrix:
      - CPE_VER:
        - '24.07'
        PRGENV:
        - gnu
        - cray
        SLE_VER:
        - '15.5'

build cpe gh200:
  <<: *matrix-conf
  extends: .container-builder-cscs-gh200
  stage: build
  before_script:
    - source $CPE_VER/aarch64/arg_common.txt
    - source $CPE_VER/aarch64/$PRGENV/arg.txt
  variables:
    DOCKERFILE: Dockerfile
    PERSIST_IMAGE_NAME: $CSCS_REGISTRY_PATH/public/$ARCH/$CPE_VER/cpe-$PRGENV:$CI_COMMIT_SHORT_SHA
    DOCKER_BUILD_ARGS: >-
      [
        "PKGS_SYSTEM",
        "PKGS_CUDA",
        "PKGS_CRAY",
        "DEFAULT_MODULES",
        "CPE_VER",
        "SLE_VER",
        "RPM_REPO=https://jfrog.svc.cscs.ch/artifactory/proxy-hpe-rpm"
      ]

test cpe gh200:
  <<: *matrix-conf
  # needs does not work: https://gitlab.com/gitlab-org/gitlab/-/merge_requests/166073
  # Use stage implicit barriers until we can use `needs` with parallel:matrix
  #needs: ['build cpe gh200: [$CPE_VER, $PRGENV, $SLE_VER]']
  extends: .baremetal-runner-daint-gh200
  stage: test
  script:
    - time enroot import -o cpe.sqfs docker://$(echo $CPE_CE | sed -e "s|$CSCS_REGISTRY/|$CSCS_REGISTRY#|")
    - export CPE_CE="$PWD/cpe.sqfs"
    - git clone -b cpe_ce https://github.com/eth-cscs/cscs-reframe-tests.git
    - git clone https://github.com/reframe-hpc/reframe.git
    - cd reframe
    - ./bootstrap.sh
    - ./bin/reframe -C ../cscs-reframe-tests/config/cscs.py -c ../cscs-reframe-tests/checks/ -r --prefix=$SCRATCH/gitlab-runner/reframe-testing/rfm-$CI_JOB_ID --report-junit=report.xml -t production -p PrgEnv-ce
  variables:
    CPE_CE: $CSCS_REGISTRY_PATH/public/$ARCH/$CPE_VER/cpe-$PRGENV:$CI_COMMIT_SHORT_SHA
    RFM_AUTODETECT_METHODS: "cat /etc/xthostname,hostname"
  artifacts:
    when: always
    paths:
      - reframe/report.xml
    reports:
      junit: reframe/report.xml


deploy cpe gh200:
  <<: *matrix-conf
  #needs: ['test cpe gh200: [$CPE_VER, $PRGENV, $SLE_VER]']
  extends: .container-runner-lightweight-zen2
  stage: deploy
  image: "quay.io/skopeo/stable:latest"
  rules:
    - if: $CI_COMMIT_REF_NAME != "main"
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_REF_NAME == "main"
      when: on_success
  script:
    - echo "Deploying image under well known location ${TARGET_IMAGE}"
    - !reference [.fetch-registry-tokens, script]
    - echo ${CSCS_REGISTRY_PASSWORD} | skopeo login --username ${CSCS_REGISTRY_USER} --password-stdin ${CSCS_REGISTRY}
    - skopeo copy --multi-arch=all "docker://${FROM_IMAGE}" "docker://${TARGET_IMAGE}"
  variables:
    FROM_IMAGE: "$CSCS_REGISTRY_PATH/public/$ARCH/$CPE_VER/cpe-$PRGENV:$CI_COMMIT_SHORT_SHA"
    TARGET_IMAGE: "$CSCS_REGISTRY_PATH/public/deploy/$ARCH/$CPE_VER/cpe-$PRGENV:$DEPLOY_TAG"
    ARCH: 'aarch64' # set ARCH variable to aarch64, although the runner is an x86_64 runner
